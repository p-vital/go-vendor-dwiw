#!/usr/bin/env python

import sys, os, subprocess, contextlib

@contextlib.contextmanager
def in_dir(path):
    prev_cwd = os.getcwd()
    os.chdir(path)
    try:
        yield
    finally:
        os.chdir(prev_cwd)

def save():
    gopath = os.environ['GOPATH']
    start = os.path.join(gopath, 'src')
    deps = []
    for root, dirs, files in os.walk(start):
        if '.git' in dirs:
            repo_name = root[len(start)+1:]
            with in_dir(root):
                rev = subprocess.check_output(['git', 'rev-parse', 'HEAD']).strip()
            deps.append((repo_name, rev))

    deps.sort(lambda a, b: cmp(a[0], a[1]))
    with open('Godeps', 'w') as f:
        for repo_name, rev in deps:
            f.write("%s %s\n" % (repo_name, rev))

def restore():
    deps = {}
    with open('Godeps') as f:
        for line in f.readlines():
            repo_name, rev = line.strip().split(' ')
            deps[repo_name] = rev

    gopath = os.environ['GOPATH']
    start = os.path.join(gopath, 'src')
    for root, dirs, files in os.walk(start):
        if '.git' in dirs:
            repo_name = root[len(start)+1:]
            if repo_name in deps:
                rev = deps[repo_name]
                print('Set %s to %s' % (repo_name, rev))
                with in_dir(root):
                    rev = subprocess.check_call(['git', 'checkout', '-q', rev])
            else:
                print('%s not in Godeps' % repo_name)

action = sys.argv[1]
if action == 'save':
    save()
elif action == 'restore':
    restore()
else:
    raise Exception('bogus action')
